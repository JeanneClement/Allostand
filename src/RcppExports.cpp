// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// AlloStand
Rcpp::List AlloStand(arma::mat data, int stand_attempt_max, int tree_attempt_max, double overlap_max, double plot_length, double quadrat_length, double voxel_size, bool force, bool verbose);
RcppExport SEXP _Allostand_AlloStand(SEXP dataSEXP, SEXP stand_attempt_maxSEXP, SEXP tree_attempt_maxSEXP, SEXP overlap_maxSEXP, SEXP plot_lengthSEXP, SEXP quadrat_lengthSEXP, SEXP voxel_sizeSEXP, SEXP forceSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type stand_attempt_max(stand_attempt_maxSEXP);
    Rcpp::traits::input_parameter< int >::type tree_attempt_max(tree_attempt_maxSEXP);
    Rcpp::traits::input_parameter< double >::type overlap_max(overlap_maxSEXP);
    Rcpp::traits::input_parameter< double >::type plot_length(plot_lengthSEXP);
    Rcpp::traits::input_parameter< double >::type quadrat_length(quadrat_lengthSEXP);
    Rcpp::traits::input_parameter< double >::type voxel_size(voxel_sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type force(forceSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(AlloStand(data, stand_attempt_max, tree_attempt_max, overlap_max, plot_length, quadrat_length, voxel_size, force, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Allostand_AlloStand", (DL_FUNC) &_Allostand_AlloStand, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_Allostand(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
